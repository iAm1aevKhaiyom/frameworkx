import { parse } from "@microframework/parser"

describe("parse models > different model app", () => {
  test("model with different types in", () => {
    const result = parse(__dirname + "/different-models-app.ts")
    // console.log(JSON.stringify(result, undefined, 2))

    expect(result).toEqual({
      "@type": "ApplicationTypeMetadata",
      name: "App",
      description: "",
      actions: [],
      inputs: [],
      models: [
        {
          "@type": "TypeMetadata",
          kind: "object",
          array: false,
          nullable: false,
          deprecated: false,
          canBeUndefined: false,
          args: [],
          properties: [
            {
              "@type": "TypeMetadata",
              kind: "number",
              array: false,
              nullable: false,
              deprecated: false,
              description: "",
              canBeUndefined: false,
              args: [],
              properties: [],
              propertyName: "id",
              propertyPath: "PostType.id",
            },
            {
              "@type": "TypeMetadata",
              kind: "string",
              array: false,
              nullable: false,
              deprecated: false,
              description: "",
              canBeUndefined: false,
              properties: [],
              propertyName: "name",
              propertyPath: "PostType.name",
              args: [
                {
                  "@type": "TypeMetadata",
                  kind: "object",
                  array: false,
                  nullable: false,
                  deprecated: false,
                  description: "",
                  canBeUndefined: false,
                  args: [],
                  properties: [
                    {
                      "@type": "TypeMetadata",
                      kind: "string",
                      array: false,
                      nullable: false,
                      deprecated: false,
                      description: "",
                      canBeUndefined: false,
                      args: [],
                      properties: [],
                      propertyName: "keyword",
                      propertyPath: "PostType.Args.name.keyword",
                    },
                  ],
                  propertyPath: "PostType.Args.name",
                },
              ],
            },
          ],
          modelName: "PostTypeModel",
          propertyName: "PostType",
          typeName: "PostType",
          propertyPath: "PostType",
          description: "Type for a PostTypeModel.",
        },
        {
          "@type": "TypeMetadata",
          kind: "object",
          array: false,
          nullable: false,
          deprecated: false,
          canBeUndefined: false,
          args: [],
          properties: [
            {
              "@type": "TypeMetadata",
              kind: "number",
              array: false,
              nullable: false,
              deprecated: false,
              description: "",
              canBeUndefined: false,
              args: [],
              properties: [],
              propertyName: "id",
              propertyPath: "PostClass.id",
            },
            {
              "@type": "TypeMetadata",
              kind: "string",
              array: false,
              nullable: false,
              deprecated: false,
              description: "",
              canBeUndefined: false,
              properties: [],
              propertyName: "name",
              propertyPath: "PostClass.name",
              args: [
                {
                  "@type": "TypeMetadata",
                  array: false,
                  canBeUndefined: false,
                  deprecated: false,
                  description: "",
                  kind: "object",
                  nullable: false,
                  args: [],
                  properties: [
                    {
                      "@type": "TypeMetadata",
                      array: false,
                      canBeUndefined: false,
                      deprecated: false,
                      description: "",
                      kind: "string",
                      nullable: false,
                      args: [],
                      properties: [],
                      propertyName: "keyword",
                      propertyPath: "PostClass.Args.name.keyword",
                    },
                  ],
                  propertyPath: "PostClass.Args.name",
                },
              ],
            },
          ],
          typeName: "PostClass",
          modelName: "PostClassModel",
          propertyName: "PostClass",
          propertyPath: "PostClass",
          description: "Class for a PostClassModel.",
        },
        {
          "@type": "TypeMetadata",
          kind: "object",
          array: false,
          nullable: false,
          deprecated: false,
          canBeUndefined: false,
          args: [],
          properties: [
            {
              "@type": "TypeMetadata",
              kind: "number",
              array: false,
              nullable: false,
              deprecated: false,
              description: "",
              canBeUndefined: false,
              args: [],
              properties: [],
              propertyName: "id",
              propertyPath: "PostInterface.id",
            },
            {
              "@type": "TypeMetadata",
              kind: "string",
              array: false,
              nullable: false,
              deprecated: false,
              description: "",
              canBeUndefined: false,
              properties: [],
              propertyName: "name",
              propertyPath: "PostInterface.name",
              args: [
                {
                  "@type": "TypeMetadata",
                  array: false,
                  canBeUndefined: false,
                  deprecated: false,
                  description: "",
                  kind: "object",
                  nullable: false,
                  args: [],
                  properties: [
                    {
                      "@type": "TypeMetadata",
                      array: false,
                      canBeUndefined: false,
                      deprecated: false,
                      description: "",
                      kind: "string",
                      nullable: false,
                      args: [],
                      properties: [],
                      propertyName: "keyword",
                      propertyPath: "PostInterface.Args.name.keyword",
                    },
                  ],
                  propertyPath: "PostInterface.Args.name",
                },
              ],
            },
          ],
          typeName: "PostInterface",
          modelName: "PostInterfaceModel",
          propertyName: "PostInterface",
          propertyPath: "PostInterface",
          description: "Interface for a PostModel.",
        },
        {
          "@type": "TypeMetadata",
          kind: "object",
          array: false,
          nullable: false,
          deprecated: false,
          canBeUndefined: false,
          args: [],
          properties: [
            {
              "@type": "TypeMetadata",
              kind: "number",
              array: false,
              nullable: false,
              deprecated: false,
              description: "",
              canBeUndefined: false,
              args: [],
              properties: [],
              propertyName: "id",
              propertyPath: "PostLiteralModel.id",
            },
            {
              "@type": "TypeMetadata",
              kind: "string",
              array: false,
              nullable: false,
              deprecated: false,
              description: "",
              canBeUndefined: false,
              properties: [],
              propertyName: "name",
              propertyPath: "PostLiteralModel.name",
              args: [
                {
                  "@type": "TypeMetadata",
                  kind: "object",
                  array: false,
                  nullable: false,
                  deprecated: false,
                  description: "",
                  canBeUndefined: false,
                  args: [],
                  properties: [
                    {
                      "@type": "TypeMetadata",
                      kind: "string",
                      array: false,
                      nullable: false,
                      deprecated: false,
                      description: "",
                      canBeUndefined: false,
                      args: [],
                      properties: [],
                      propertyName: "keyword",
                      propertyPath: "PostLiteralModel.Args.name.keyword",
                    },
                  ],
                  propertyPath: "PostLiteralModel.Args.name",
                },
              ],
            },
          ],
          modelName: "PostLiteralModel",
          propertyName: "PostLiteralModel",
          propertyPath: "PostLiteralModel",
          description: "",
        },
      ],
      queries: [],
      mutations: [],
      subscriptions: [],
    })
  })
})
